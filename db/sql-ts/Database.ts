/*
* This file was generated by a tool.
* Rerun sql-ts to regenerate this file.
*/
type JsonString = string
export const ActiveDatasetsRowTableName = "active_datasets"
export interface ActiveDatasetsRowForInsert {
  'createdAt'?: Date;
  'createdByUserId': number;
  'dataEditedAt': Date;
  'dataEditedByUserId': number;
  'description': string;
  'id'?: number;
  'isArchived'?: number;
  'isPrivate'?: number;
  'metadataEditedAt': Date;
  'metadataEditedByUserId': number;
  'name': string | null;
  'namespace': string;
  'nonRedistributable'?: number;
  'shortName': string | null;
  'sourceChecksum': string | null;
  'updatedAt': Date | null;
  'updatePeriodDays': number | null;
  'version': string | null;
}
export type ActiveDatasetsRow = Required<ActiveDatasetsRowForInsert>


export const AnalyticsPageviewsRowTableName = "analytics_pageviews"
export interface AnalyticsPageviewsRowForInsert {
  'day': Date;
  'url': string;
  'views_14d': number;
  'views_365d': number;
  'views_7d': number;
}
export type AnalyticsPageviewsRow = Required<AnalyticsPageviewsRowForInsert>


export const ChartDimensionsRowTableName = "chart_dimensions"
export interface ChartDimensionsRowForInsert {
  'chartId': number;
  'createdAt'?: Date;
  'id'?: number;
  'order': number;
  'property': string;
  'updatedAt': Date | null;
  'variableId': number;
}
export type ChartDimensionsRow = Required<ChartDimensionsRowForInsert>


export const ChartRevisionsRowTableName = "chart_revisions"
export interface ChartRevisionsRowForInsert {
  'chartId': number | null;
  'config': JsonString | null;
  'createdAt'?: Date;
  'id'?: string;
  'updatedAt': Date | null;
  'userId': number | null;
}
export type ChartRevisionsRow = Required<ChartRevisionsRowForInsert>


export const ChartSlugRedirectsRowTableName = "chart_slug_redirects"
export interface ChartSlugRedirectsRowForInsert {
  'chart_id': number;
  'createdAt'?: Date;
  'id'?: number;
  'slug': string;
  'updatedAt': Date | null;
}
export type ChartSlugRedirectsRow = Required<ChartSlugRedirectsRowForInsert>


export const ChartTagsRowTableName = "chart_tags"
export interface ChartTagsRowForInsert {
  'chartId': number;
  'createdAt'?: Date;
  'isApproved'?: number;
  'keyChartLevel'?: number;
  'tagId': number;
  'updatedAt': Date | null;
}
export type ChartTagsRow = Required<ChartTagsRowForInsert>


export const ChartsRowTableName = "charts"
export interface ChartsRowForInsert {
  'config': JsonString;
  'createdAt'?: Date;
  'id'?: number;
  'is_indexable'?: number;
  'isExplorable'?: number;
  'lastEditedAt': Date;
  'lastEditedByUserId': number;
  'publishedAt': Date | null;
  'publishedByUserId': number | null;
  'slug': string | null;
  'type': string | null;
  'updatedAt': Date | null;
}
export type ChartsRow = Required<ChartsRowForInsert>


export const CountryLatestDataRowTableName = "country_latest_data"
export interface CountryLatestDataRowForInsert {
  'country_code': string | null;
  'value': string | null;
  'variable_id': number | null;
  'year': number | null;
}
export type CountryLatestDataRow = Required<CountryLatestDataRowForInsert>


export const CountryNameToolContinentRowTableName = "country_name_tool_continent"
export interface CountryNameToolContinentRowForInsert {
  'continent_code': string;
  'continent_name': string;
  'id'?: number;
}
export type CountryNameToolContinentRow = Required<CountryNameToolContinentRowForInsert>


export const CountryNameToolCountrydataRowTableName = "country_name_tool_countrydata"
export interface CountryNameToolCountrydataRowForInsert {
  'continent': number | null;
  'cow_code': number | null;
  'cow_letter': string | null;
  'id'?: number;
  'imf_code': number | null;
  'iso_alpha2': string | null;
  'iso_alpha3': string | null;
  'kansas_code': string | null;
  'marc_code': string | null;
  'ncd_code': string | null;
  'owid_name': string;
  'penn_code': string | null;
  'unctad_code': string | null;
}
export type CountryNameToolCountrydataRow = Required<CountryNameToolCountrydataRowForInsert>


export const CountryNameToolCountrynameRowTableName = "country_name_tool_countryname"
export interface CountryNameToolCountrynameRowForInsert {
  'country_name': string;
  'id'?: number;
  'owid_country': number;
}
export type CountryNameToolCountrynameRow = Required<CountryNameToolCountrynameRowForInsert>


export const DatasetFilesRowTableName = "dataset_files"
export interface DatasetFilesRowForInsert {
  'createdAt'?: Date;
  'datasetId': number;
  'file': any;
  'filename': string;
  'updatedAt': Date | null;
}
export type DatasetFilesRow = Required<DatasetFilesRowForInsert>


export const DatasetTagsRowTableName = "dataset_tags"
export interface DatasetTagsRowForInsert {
  'createdAt'?: Date;
  'datasetId': number;
  'tagId': number;
  'updatedAt': Date | null;
}
export type DatasetTagsRow = Required<DatasetTagsRowForInsert>


export const DatasetsRowTableName = "datasets"
export interface DatasetsRowForInsert {
  'createdAt'?: Date;
  'createdByUserId': number;
  'dataEditedAt': Date;
  'dataEditedByUserId': number;
  'description': string;
  'id'?: number;
  'isArchived'?: number;
  'isPrivate'?: number;
  'metadataEditedAt': Date;
  'metadataEditedByUserId': number;
  'name': string | null;
  'namespace': string;
  'nonRedistributable'?: number;
  'shortName': string | null;
  'sourceChecksum': string | null;
  'updatedAt': Date | null;
  'updatePeriodDays': number | null;
  'version': string | null;
}
export type DatasetsRow = Required<DatasetsRowForInsert>


export const EntitiesRowTableName = "entities"
export interface EntitiesRowForInsert {
  'code': string | null;
  'createdAt'?: Date;
  'displayName': string;
  'id'?: number;
  'name': string;
  'updatedAt': Date | null;
  'validated': number;
}
export type EntitiesRow = Required<EntitiesRowForInsert>


export const ExplorerChartsRowTableName = "explorer_charts"
export interface ExplorerChartsRowForInsert {
  'chartId': number;
  'explorerSlug': string;
  'id'?: number;
}
export type ExplorerChartsRow = Required<ExplorerChartsRowForInsert>


export const ExplorerVariablesRowTableName = "explorer_variables"
export interface ExplorerVariablesRowForInsert {
  'explorerSlug': string;
  'id'?: number;
  'variableId': number;
}
export type ExplorerVariablesRow = Required<ExplorerVariablesRowForInsert>


export const ExplorersRowTableName = "explorers"
export interface ExplorersRowForInsert {
  'config': JsonString;
  'createdAt'?: Date | null;
  'isPublished': number;
  'slug': string;
  'updatedAt'?: Date | null;
}
export type ExplorersRow = Required<ExplorersRowForInsert>


export const ImagesRowTableName = "images"
export interface ImagesRowForInsert {
  'defaultAlt': string;
  'filename': string;
  'googleId': string;
  'id'?: number;
  'originalWidth': number | null;
  'updatedAt': string | null;
}
export type ImagesRow = Required<ImagesRowForInsert>


export const ImporterAdditionalcountryinfoRowTableName = "importer_additionalcountryinfo"
export interface ImporterAdditionalcountryinfoRowForInsert {
  'country_code': string;
  'country_latest_census': string | null;
  'country_latest_survey': string | null;
  'country_name': string;
  'country_recent_income_source': string | null;
  'country_special_notes': string | null;
  'country_wb_income_group': string | null;
  'country_wb_region': string | null;
  'dataset': string;
  'id'?: number;
}
export type ImporterAdditionalcountryinfoRow = Required<ImporterAdditionalcountryinfoRowForInsert>


export const ImporterImporthistoryRowTableName = "importer_importhistory"
export interface ImporterImporthistoryRowForInsert {
  'id'?: number;
  'import_notes': string;
  'import_state': string;
  'import_time': Date;
  'import_type': string;
}
export type ImporterImporthistoryRow = Required<ImporterImporthistoryRowForInsert>


export const MigrationsRowTableName = "migrations"
export interface MigrationsRowForInsert {
  'id'?: number;
  'name': string;
  'timestamp': string;
}
export type MigrationsRow = Required<MigrationsRowForInsert>


export const NamespacesRowTableName = "namespaces"
export interface NamespacesRowForInsert {
  'createdAt'?: Date;
  'description': string | null;
  'id'?: number;
  'isArchived'?: number;
  'name': string;
  'updatedAt': Date | null;
}
export type NamespacesRow = Required<NamespacesRowForInsert>


export const OriginsRowTableName = "origins"
export interface OriginsRowForInsert {
  'attribution': string | null;
  'attributionShort': string | null;
  'citationFull': string | null;
  'dateAccessed': Date | null;
  'datePublished': string | null;
  'description': string | null;
  'descriptionSnapshot': string | null;
  'id'?: number;
  'license': JsonString | null;
  'producer': string | null;
  'title': string | null;
  'titleSnapshot': string | null;
  'urlDownload': string | null;
  'urlMain': string | null;
  'versionProducer': string | null;
}
export type OriginsRow = Required<OriginsRowForInsert>


export const OriginsVariablesRowTableName = "origins_variables"
export interface OriginsVariablesRowForInsert {
  'displayOrder'?: number;
  'originId': number;
  'variableId': number;
}
export type OriginsVariablesRow = Required<OriginsVariablesRowForInsert>


export const PostTagsRowTableName = "post_tags"
export interface PostTagsRowForInsert {
  'createdAt'?: Date;
  'post_id': number;
  'tag_id': number;
  'updatedAt': Date | null;
}
export type PostTagsRow = Required<PostTagsRowForInsert>


export const PostsRowTableName = "posts"
export interface PostsRowForInsert {
  'archieml': JsonString | null;
  'archieml_update_statistics': JsonString | null;

  /** json array of objects with field author in the form "firstname lastname" and field order */
  'authors': JsonString | null;
  'content': string;
  'created_at_in_wordpress': Date | null;
  'excerpt': string | null;
  'featured_image'?: string;
  'formattingOptions': JsonString | null;
  'gdocSuccessorId': string | null;
  'id'?: number;
  'markdown': string | null;
  'published_at': Date | null;
  'slug': string;
  'status': string;
  'title': string;
  'type': string;
  'updated_at': Date | null;
  'updated_at_in_wordpress': Date | null;
}
export type PostsRow = Required<PostsRowForInsert>


export const PostsGdocsRowTableName = "posts_gdocs"
export interface PostsGdocsRowForInsert {
  'breadcrumbs': JsonString | null;
  'content': JsonString;
  'createdAt': Date;
  'id': string;
  'markdown': string | null;
  'publicationContext'?: any;
  'published': number;
  'publishedAt': Date | null;
  'revisionId': string | null;
  'slug': string;
  'updatedAt': Date | null;
}
export type PostsGdocsRow = Required<PostsGdocsRowForInsert>


export const PostsGdocsLinksRowTableName = "posts_gdocs_links"
export interface PostsGdocsLinksRowForInsert {
  'componentType': string;
  'hash': string;
  'id'?: number;
  'linkType': any | null;
  'queryString': string;
  'sourceId': string | null;
  'target': string;
  'text': string;
}
export type PostsGdocsLinksRow = Required<PostsGdocsLinksRowForInsert>


export const PostsGdocsVariablesFaqsRowTableName = "posts_gdocs_variables_faqs"
export interface PostsGdocsVariablesFaqsRowForInsert {
  'displayOrder'?: number;
  'fragmentId': string;
  'gdocId': string;
  'variableId': number;
}
export type PostsGdocsVariablesFaqsRow = Required<PostsGdocsVariablesFaqsRowForInsert>


export const PostsGdocsXImagesRowTableName = "posts_gdocs_x_images"
export interface PostsGdocsXImagesRowForInsert {
  'gdocId': string;
  'id'?: number;
  'imageId': number;
}
export type PostsGdocsXImagesRow = Required<PostsGdocsXImagesRowForInsert>


export const PostsGdocsXTagsRowTableName = "posts_gdocs_x_tags"
export interface PostsGdocsXTagsRowForInsert {
  'gdocId': string;
  'tagId': number;
}
export type PostsGdocsXTagsRow = Required<PostsGdocsXTagsRowForInsert>


export const PostsLinksRowTableName = "posts_links"
export interface PostsLinksRowForInsert {
  'componentType': string;
  'hash': string;
  'id'?: number;
  'linkType': any | null;
  'queryString': string;
  'sourceId': number;
  'target': string;
  'text': string;
}
export type PostsLinksRow = Required<PostsLinksRowForInsert>


export const PostsWithGdocPublishStatusRowTableName = "posts_with_gdoc_publish_status"
export interface PostsWithGdocPublishStatusRowForInsert {
  'archieml': JsonString | null;
  'archieml_update_statistics': JsonString | null;

  /** json array of objects with field author in the form "firstname lastname" and field order */
  'authors': JsonString | null;
  'content': string;
  'created_at_in_wordpress': Date | null;
  'excerpt': string | null;
  'gdocSuccessorId': string | null;
  'id'?: number;
  'isGdocPublished'?: number;
  'published_at': Date | null;
  'slug': string;
  'status': string;
  'title': string;
  'type': string;
  'updated_at': Date | null;
  'updated_at_in_wordpress': Date | null;
}
export type PostsWithGdocPublishStatusRow = Required<PostsWithGdocPublishStatusRowForInsert>


export const SessionsRowTableName = "sessions"
export interface SessionsRowForInsert {
  'expire_date': Date;
  'session_data': string;
  'session_key': string;
}
export type SessionsRow = Required<SessionsRowForInsert>


export const SourcesRowTableName = "sources"
export interface SourcesRowForInsert {
  'createdAt'?: Date;
  'datasetId': number | null;
  'description': JsonString;
  'id'?: number;
  'name': string | null;
  'updatedAt': Date | null;
}
export type SourcesRow = Required<SourcesRowForInsert>


export const SuggestedChartRevisionsRowTableName = "suggested_chart_revisions"
export interface SuggestedChartRevisionsRowForInsert {
  'changesInDataSummary': string | null;
  'chartId': number;
  'createdAt'?: Date;
  'createdBy': number;
  'decisionReason': string | null;
  'experimental': JsonString | null;
  'id'?: string;
  'isPendingOrFlagged': number | null;
  'originalConfig': JsonString;
  'originalVersion': number;
  'status': string;
  'suggestedConfig': JsonString;
  'suggestedReason': string | null;
  'suggestedVersion': number;
  'updatedAt': Date | null;
  'updatedBy': number | null;
}
export type SuggestedChartRevisionsRow = Required<SuggestedChartRevisionsRowForInsert>


export const TagsRowTableName = "tags"
export interface TagsRowForInsert {
  'createdAt'?: Date;
  'id'?: number;
  'isBulkImport'?: number;
  'name': string;
  'parentId': number | null;
  'slug': string | null;
  'specialType': string | null;
  'updatedAt': Date | null;
}
export type TagsRow = Required<TagsRowForInsert>


export const TagsVariablesTopicTagsRowTableName = "tags_variables_topic_tags"
export interface TagsVariablesTopicTagsRowForInsert {
  'displayOrder'?: number;
  'tagId': number;
  'variableId': number;
}
export type TagsVariablesTopicTagsRow = Required<TagsVariablesTopicTagsRowForInsert>


export const UsersRowTableName = "users"
export interface UsersRowForInsert {
  'createdAt'?: Date;
  'email': string;
  'fullName': string;
  'id'?: number;
  'isActive'?: number;
  'isSuperuser'?: number;
  'lastLogin': Date | null;
  'lastSeen': Date | null;
  'password': string | null;
  'updatedAt': Date | null;
}
export type UsersRow = Required<UsersRowForInsert>


export const VariablesRowTableName = "variables"
export interface VariablesRowForInsert {
  'attribution': string | null;
  'attributionShort': string | null;
  'catalogPath': string | null;
  'code': string | null;
  'columnOrder'?: number;
  'coverage': string;
  'createdAt'?: Date;
  'datasetId': number;
  'description': string | null;
  'descriptionFromProducer': string | null;
  'descriptionKey': JsonString | null;
  'descriptionProcessing': string | null;
  'descriptionShort': string | null;
  'dimensions': JsonString | null;
  'display': JsonString;
  'grapherConfigAdmin': JsonString | null;
  'grapherConfigETL': JsonString | null;
  'id'?: number;
  'license': JsonString | null;
  'licenses': JsonString | null;
  'name': string | null;
  'originalMetadata': JsonString | null;
  'processingLevel': string | null;
  'processingLog': JsonString | null;
  'schemaVersion'?: number;
  'shortName': string | null;
  'shortUnit': string | null;
  'sourceId': number | null;
  'timespan': string;
  'titlePublic': string | null;
  'titleVariant': string | null;
  'unit': string;
  'updatedAt': Date | null;
}
export type VariablesRow = Required<VariablesRowForInsert>


